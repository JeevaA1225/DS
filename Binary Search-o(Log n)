Time Complexity: O(log n)
Auxiliary Space: O(1)

public class Main {
    int fun(int a[],int n,int key)
    {
        int l=0,r=n-1,mid=0;
        while(l<=r)
        {
            mid=(l+r)/2;
            if(a[mid]==key)
                return mid;
            else if(a[mid]<key)
                l=mid+1;
            else
                r=mid-1;
        }
        return -1;
        }
    public static void main(String[] args) {
        System.out.println("Hello World!");
        Scanner z=new Scanner(System.in); 
        Main o=new Main();
        int n=z.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
            a[i]=z.nextInt();
        int key=z.nextInt();
        int ans=0;
        System.out.println(o.fun(a,n,key));
    }
}
-------------------------------------------------------------------------------------------------------------------------------
public class Main {
    void fun(int a[],int n,int key)
    {
        int l=0,r=n-1,mid=0;
        while(r-l>1)
        {
            mid=(l+r)/2;
            if(a[mid]<key)
                l=mid+1;
            else
                r=mid;
        }
        if(a[l]==key)
            System.out.println(l);
        else if(a[r]==key)
            System.out.println(r);
        else
            System.out.println("Not found");
    }
        
    public static void main(String[] args) {
        System.out.println("Hello World!");
        Scanner z=new Scanner(System.in); 
        Main o=new Main();
        int n=z.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
            a[i]=z.nextInt();
        int key=z.nextInt();
        o.fun(a,n,key);
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------
Time Complexity: O(log n)
Auxiliary Space: O(log n)

public class Main {
    int fun(int a[],int l,int r,int key)
    {
        int mid=0;
        while(l<=r)
        {
            mid=(l+r)/2;
            if(a[mid]==key)
                return mid;
            else if(a[mid]<key)
                return fun(a,mid+1,r,key);
            else
                return fun(a,l,mid-1,key);
        }
        return -1;
        }
    public static void main(String[] args) {
        System.out.println("Hello World!");
        Scanner z=new Scanner(System.in); 
        Main o=new Main();
        int n=z.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
            a[i]=z.nextInt();
        int key=z.nextInt();
        int ans=0;
        System.out.println(o.fun(a,0,n-1,key));
    }
}

/* This code is contributed by Praveen Mohan */
